# This is the main configuration file for the application.
# ~~~~~

application.name="riff-raff"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="foUsKP^2=ZKkDaCF^c6Y6b:i:WS30CO4sBMY6>s6aAS63sO/cEV9H0^EB`/cQC4<"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled
dbplugin=disabled
ehcacheplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

riffraff {
    akka {
        task-dispatcher {
            type = BalancingDispatcher
            executor = thread-pool-executor
            thread-pool-executor {
                # minimum number of threads to cap factor-based core number to
                core-pool-size-min = 2
                # No of core threads ... ceil(available processors * factor)
                core-pool-size-factor = 2.0
                # maximum number of threads to cap factor-based number to
                core-pool-size-max = 10
            }
            # Throughput defines the maximum number of messages to be
            # processed per actor before the thread jumps to the next actor.
            # Set to 1 for as fair as possible.
            throughput = 100
        }
    }
}